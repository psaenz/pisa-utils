using System;
using System.Collections.Generic;
using System.Linq;
using System.Reflection;
using System.Runtime.CompilerServices;

namespace Pisa.Utils.Reflection
{
    public class TypeUtils
    {
        /// <summary>
        /// Checks for all the classes that belongs to the giving Assembly into the giving Namespace
        /// Skips Enum classes and classes generated by Visual Studio compiler.
        /// If the namespace doesn't exist in the giving Assembly, it will return zero.
        /// </summary>
        /// <param name="assembly"></param>
        /// <param name="nameSpace"></param>
        /// <returns></returns>
        public static IEnumerable<Type> GetTypesFromNamespace(Assembly assembly, string nameSpace)
        {
            return assembly.GetTypes().Where(t => String.Equals(t.Namespace, nameSpace, StringComparison.Ordinal) && !t.IsEnum && Attribute.GetCustomAttribute(t, typeof(CompilerGeneratedAttribute)) == null);
        }
    }
}
